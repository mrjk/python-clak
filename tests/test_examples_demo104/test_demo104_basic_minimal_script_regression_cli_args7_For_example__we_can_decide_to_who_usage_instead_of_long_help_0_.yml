cli_args: []
exit_code: 0
output: "When cli_run method is not explicitly defined, it show help if it has \n\
  Subcommands, otherwise it would have raised and NotImplemetedError error.\n\n\n\
  For example, we can decide to who usage instead of long help:\n--- 8< --- 8< ---\
  \ 8< ---\nusage: demo104_nested_deep.py [-h] [--debug] [--config CONFIG]\n     \
  \                         {command1,command2} ...\n--- 8< --- 8< --- 8< ---\n\n\n\
  But this is not very conveniant for command discovery.\nSo let's show again long\
  \ help:\n--- 8< --- 8< --- 8< ---\nusage: demo104_nested_deep.py [-h] [--debug]\
  \ [--config CONFIG]\n                              {command1,command2} ...\n\nDemo\
  \ application with options and many nested subcommands.\n\npositional arguments:\n\
  \nsubcommands:\n  command1                  Execute command 1\n  command1 sub1 \
  \            SubCommand1\n  command1 sub2             SubCommand2\n  command1 sub2\
  \ sub2a       SubSubCommand2a\n  command1 sub2 sub2b       SubSubCommand2b, should\
  \ raise NotIMplemented error\n  command2                  Execute command 2\n\n\
  options:\n  -h, --help                  show this help message and exit\n  --debug\
  \                     Enable debug mode (default: False)\n  --config CONFIG, -c\
  \ CONFIG  Config file path (default: config.yaml)\n--- 8< --- 8< --- 8< ---\n"
